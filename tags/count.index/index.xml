<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Count.index on thedevopscat blog</title><link>https://www.thedevopscat.co.uk/tags/count.index/</link><description>Recent content in Count.index on thedevopscat blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 22 Dec 2022 15:47:39 +0000</lastBuildDate><atom:link href="https://www.thedevopscat.co.uk/tags/count.index/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform Count Index</title><link>https://www.thedevopscat.co.uk/code/terraform/terraform2/</link><pubDate>Thu, 22 Dec 2022 15:47:39 +0000</pubDate><guid>https://www.thedevopscat.co.uk/code/terraform/terraform2/</guid><description>&lt;p>As a quick summary, a &lt;em>count index&lt;/em> can be used (but probably shouldn&amp;rsquo;t, for_each is more flexible) to create multiple resource instances of the same type from one block of code, for example lets say you want a spin up multiple vm&amp;rsquo;s behind a load balancer for some fault tolerance.&lt;/p>
&lt;p>The benefit here is you would have one block of code which would be automatically processed multiple times, as specified by your &lt;em>count&lt;/em> variable/local, (it can also be set 1 or even zero, but more on this another time&amp;hellip;).&lt;/p></description></item></channel></rss>